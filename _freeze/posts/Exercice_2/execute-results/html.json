{
  "hash": "2649793beb12af9751c6cfa651a4fa09",
  "result": {
    "markdown": "---\ntitle: \"Exercice 2\"\nauthor: \"Clément Poupelin\"\ndate: \"2025-02-17\"\nformat: \n  html:\n    embed-resources: false\n    toc: true\n    code-fold: false\n    code-summary: \"Show the code\"\n    code-tools: true\n    toc-location: right\n    page-layout: article\n    code-overflow: wrap\ntoc: true\nnumber-sections: false\neditor: visual\ncategories: [\"TP\"]\nimage: \"/img/baseball.png\"\ndescription: \"Ici, on commence à utilser des méthodes de regression avec selection de variable et tester le lien linéaire existant sur des données de baseball\"\n---\n\n\n# Setup\n\n:::: panel-tabset\n## packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Données\nlibrary(ISLR)         # Hitters data \nlibrary(dplyr)        # manipulation des données\n```\n:::\n\n\n## Fonctions\n\n\n::::\n\n# Données\n\nOn étudie à nouveau le jeu de données [**Hitters**](https://rdrr.io/cran/ISLR/man/Hitters.html) disponible dans la libraire { *ISLR* } de *R*.\n\nIl s'agit d'un je de données de la Major League Baseball provenant des saisons de 1986 et 1987.\n\nLe jeu de données possède 322 lignes/individus pour les différents joueurs et 20 variables. \n\nParmi les variables, on trouve les informations suivantes :\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-hover table-condensed\" style=\"margin-left: auto; margin-right: auto;\">\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">AtBat</span> </td>\n   <td style=\"text-align:left;\"> Number of times at bat in 1986 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">Hits</span> </td>\n   <td style=\"text-align:left;\"> Number of hits in 1986 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">HmRun</span> </td>\n   <td style=\"text-align:left;\"> Number of home runs in 1986 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">Runs</span> </td>\n   <td style=\"text-align:left;\"> Number of runs in 1986 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">RBI</span> </td>\n   <td style=\"text-align:left;\"> Number of runs batted in in 1986 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">Walks</span> </td>\n   <td style=\"text-align:left;\"> Number of walks in 1986 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">Years</span> </td>\n   <td style=\"text-align:left;\"> Number of years in the major leagues </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">CAtBat</span> </td>\n   <td style=\"text-align:left;\"> Number of times at bat during his career </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">CHits</span> </td>\n   <td style=\"text-align:left;\"> Number of hits during his career </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">CHmRun</span> </td>\n   <td style=\"text-align:left;\"> Number of home runs during his career </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">CRuns</span> </td>\n   <td style=\"text-align:left;\"> Number of runs during his career </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">CRBI</span> </td>\n   <td style=\"text-align:left;\"> Number of runs batted in during his career </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">CWalks</span> </td>\n   <td style=\"text-align:left;\"> Number of walks during his career </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">League</span> </td>\n   <td style=\"text-align:left;\"> A factor with levels A and N indicating player's league at the end of 1986 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">Division</span> </td>\n   <td style=\"text-align:left;\"> A factor with levels E and W indicating player's division at the end of 1986 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">PutOuts</span> </td>\n   <td style=\"text-align:left;\"> Number of put outs in 1986 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">Assists</span> </td>\n   <td style=\"text-align:left;\"> Number of assists in 1986 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">Errors</span> </td>\n   <td style=\"text-align:left;\"> Number of errors in 1986 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">Salary</span> </td>\n   <td style=\"text-align:left;\"> 1987 annual salary on opening day in thousands of dollars </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">NewLeague</span> </td>\n   <td style=\"text-align:left;\"> A factor with levels A and N indicating player's league at the beginning of 1987 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nRegardons maintenant le *summary*() pour examiner les différentes variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ?Hitters\nHitters %>%\n  summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     AtBat            Hits         HmRun            Runs       \n Min.   : 16.0   Min.   :  1   Min.   : 0.00   Min.   :  0.00  \n 1st Qu.:255.2   1st Qu.: 64   1st Qu.: 4.00   1st Qu.: 30.25  \n Median :379.5   Median : 96   Median : 8.00   Median : 48.00  \n Mean   :380.9   Mean   :101   Mean   :10.77   Mean   : 50.91  \n 3rd Qu.:512.0   3rd Qu.:137   3rd Qu.:16.00   3rd Qu.: 69.00  \n Max.   :687.0   Max.   :238   Max.   :40.00   Max.   :130.00  \n                                                               \n      RBI             Walks            Years            CAtBat       \n Min.   :  0.00   Min.   :  0.00   Min.   : 1.000   Min.   :   19.0  \n 1st Qu.: 28.00   1st Qu.: 22.00   1st Qu.: 4.000   1st Qu.:  816.8  \n Median : 44.00   Median : 35.00   Median : 6.000   Median : 1928.0  \n Mean   : 48.03   Mean   : 38.74   Mean   : 7.444   Mean   : 2648.7  \n 3rd Qu.: 64.75   3rd Qu.: 53.00   3rd Qu.:11.000   3rd Qu.: 3924.2  \n Max.   :121.00   Max.   :105.00   Max.   :24.000   Max.   :14053.0  \n                                                                     \n     CHits            CHmRun           CRuns             CRBI        \n Min.   :   4.0   Min.   :  0.00   Min.   :   1.0   Min.   :   0.00  \n 1st Qu.: 209.0   1st Qu.: 14.00   1st Qu.: 100.2   1st Qu.:  88.75  \n Median : 508.0   Median : 37.50   Median : 247.0   Median : 220.50  \n Mean   : 717.6   Mean   : 69.49   Mean   : 358.8   Mean   : 330.12  \n 3rd Qu.:1059.2   3rd Qu.: 90.00   3rd Qu.: 526.2   3rd Qu.: 426.25  \n Max.   :4256.0   Max.   :548.00   Max.   :2165.0   Max.   :1659.00  \n                                                                     \n     CWalks        League  Division    PutOuts          Assists     \n Min.   :   0.00   A:175   E:157    Min.   :   0.0   Min.   :  0.0  \n 1st Qu.:  67.25   N:147   W:165    1st Qu.: 109.2   1st Qu.:  7.0  \n Median : 170.50                    Median : 212.0   Median : 39.5  \n Mean   : 260.24                    Mean   : 288.9   Mean   :106.9  \n 3rd Qu.: 339.25                    3rd Qu.: 325.0   3rd Qu.:166.0  \n Max.   :1566.00                    Max.   :1378.0   Max.   :492.0  \n                                                                    \n     Errors          Salary       NewLeague\n Min.   : 0.00   Min.   :  67.5   A:176    \n 1st Qu.: 3.00   1st Qu.: 190.0   N:146    \n Median : 6.00   Median : 425.0            \n Mean   : 8.04   Mean   : 535.9            \n 3rd Qu.:11.00   3rd Qu.: 750.0            \n Max.   :32.00   Max.   :2460.0            \n                 NA's   :59                \n```\n:::\n:::\n\n\n::: callout-warning\nOn peut déjà remarquer la présence de 59 valeurs manquantes pour la variable *Salary*.\n:::\n\nOn va donc commencer par s'en débarasser (il ne s'agit que de 59 lignes sur 322). Puis on va également se concentrer sur les variables quantitatives .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHitters_Without_NA <- Hitters %>% na.omit()\nHitters_Without_NA_quant <- Hitters_Without_NA %>% subset(, select = -c(League, Division, NewLeague))\n\nHitters_Without_NA_quant %>% dim()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 263  17\n```\n:::\n:::\n\n\n\nPuis cette fois ci nous allons simplement nous concentrer sur un sous jeu de données composé des 18 premières lignes sans valeurs manquantes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHitters_Without_NA_18 <- Hitters_Without_NA[1:18, ]\nHitters_Without_NA_18 %>% dim()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 18 20\n```\n:::\n:::\n\n\n::: callout-warning\nAttention, on peut remarquer ici que le nombre de variable est supérieur au nombre d'individus.\n:::\n\nMaintenant, il conviendrait dans ce genre de situation d'effectuer de premières analyses descritptives. Mais celle ci ayant déjà été faite pendant l'[Exercice 1](../posts/Exercice_1.qmd), on se permettra de ne pas les refaires.\n\n\n# Analyse inférentielle\n\n## Modèle brut\n\nOn désire modéliser le salaire *Salary* en fonction des variables disponibles.\n\nOn va donc ajuster un modèle de régression linéaire en utilisant toutes les variables à disposition et analyser la qualité de cet ajustement.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod1 <- lm(formula = Salary ~ .,\n           Hitters_Without_NA_18) \nmod1 %>% summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = Salary ~ ., data = Hitters_Without_NA_18)\n\nResiduals:\nALL 18 residuals are 0: no residual degrees of freedom!\n\nCoefficients: (2 not defined because of singularities)\n             Estimate Std. Error t value Pr(>|t|)\n(Intercept) -223.7909        NaN     NaN      NaN\nAtBat         -3.2428        NaN     NaN      NaN\nHits          13.1990        NaN     NaN      NaN\nHmRun        -60.8834        NaN     NaN      NaN\nRuns           0.6875        NaN     NaN      NaN\nRBI           10.3993        NaN     NaN      NaN\nWalks          7.0114        NaN     NaN      NaN\nYears         -2.3702        NaN     NaN      NaN\nCAtBat         0.2643        NaN     NaN      NaN\nCHits         -1.7919        NaN     NaN      NaN\nCHmRun         5.3897        NaN     NaN      NaN\nCRuns          4.0162        NaN     NaN      NaN\nCRBI          -4.0134        NaN     NaN      NaN\nCWalks         1.5822        NaN     NaN      NaN\nLeagueN      233.6380        NaN     NaN      NaN\nDivisionW    299.1771        NaN     NaN      NaN\nPutOuts       -0.1250        NaN     NaN      NaN\nAssists       -0.8539        NaN     NaN      NaN\nErrors             NA         NA      NA       NA\nNewLeagueN         NA         NA      NA       NA\n\nResidual standard error: NaN on 0 degrees of freedom\nMultiple R-squared:      1,\tAdjusted R-squared:    NaN \nF-statistic:   NaN on 17 and 0 DF,  p-value: NA\n```\n:::\n:::\n\n\n\n\n::: success-header\nQuelques conclusions sur le modèle :\n:::\n\n::: success\nOn peut clairement constater que ce modèle brut ne fonctionne pas avec pourtant un $R^2 = 1$. On retrouve donc le problème typique de l'analyse en grande dimension lorsque $p>n$ et qu'on ne peut pas trouver d'estimateur de regression linéaire.\n:::\n\nOn peut aussi s'amuser à regarder les critères AIC et BIC de ce modèles qui se retrouve à tendre vers l'infini.\n\n::: {.cell}\n\n```{.r .cell-code}\nAIC(mod1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -Inf\n```\n:::\n\n```{.r .cell-code}\nBIC(mod1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -Inf\n```\n:::\n:::\n\n\n### Prediction\n\nOn va maintenant tenter de prédire la variable *Salary* pour les autres joueurs.\n\nDéjà on peut regarder sur les 18 joueurs si la prédiction via le modèle nous donne des bonnes valeur. Et ce que l'on constate c'est qu'effectivement nous sommes vers ce qui pourrait nous faire penser que le modèle est bien ajusté.\n\n::: {.cell}\n\n```{.r .cell-code}\nSalary_hat <- predict(mod1, Hitters_Without_NA_18)\nSalary <- Hitters_Without_NA_18$Salary\n\nround(mean(Salary_hat - Salary ), 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n:::\n\nPourtant si nous regardons la prédiction obtenue par le modèle pour les autres joueurs et que nous effctuons la comparaison, nous voyons bien l'inéfficacité du modèle.\n\n::: {.cell}\n\n```{.r .cell-code}\nHitters_Without_NA_No18 <- Hitters_Without_NA[19:nrow(Hitters_Without_NA),]\nSalary_hat_No18 <- predict(mod1, Hitters_Without_NA_No18)\nSalary_No18 <- Hitters_Without_NA_No18$Salary\nsummary(Salary_hat_No18 - Salary_No18 )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-2363.67  -424.10   -49.12   -70.88   294.40  2648.41 \n```\n:::\n:::\n\n\n---\n\n## Modèles parcimonieux\n\nOn va maintenant mettre un oeuvre une méthode de sélection automatique classique pour réduire le nombre de variable explicative et tenter d'éviter les problèmes de grande dimension.\n\nPour cela nous allons donc partir du plus petit modèle (celui avec seulement l'*intercept*) puis faire grandir le nombre de variable. Il av donc s'agir d'une méthode de sélection automatique *forward*.\n\n::: {.cell}\n\n```{.r .cell-code}\nmod0 <- lm(Salary~1, Hitters_Without_NA_18)\nmod_forw <- step(mod0,\n                 scope = formula(mod1),\n                 trace = FALSE,\n                 direction = c(\"forward\"))\nmod_forw %>% summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = Salary ~ CWalks + League, data = Hitters_Without_NA_18)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-215.51  -82.67  -48.10   26.13  302.49 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  259.3539    77.1270   3.363  0.00427 ** \nCWalks         0.9699     0.1606   6.039 2.27e-05 ***\nLeagueN     -137.2850    79.1236  -1.735  0.10322    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 160.8 on 15 degrees of freedom\nMultiple R-squared:  0.7495,\tAdjusted R-squared:  0.7161 \nF-statistic: 22.44 on 2 and 15 DF,  p-value: 3.095e-05\n```\n:::\n:::\n\n\nNous obtenons maintenant un modèle avec 2 variable dont une significative. Puis nous pouvons constater des valeurs assez élevés pour le $R^2$ et $R^2_{adjusted}$.\n\nRegardons aussi les critères AIC et BIC.\n\n::: {.cell}\n\n```{.r .cell-code}\nAIC(mod_forw)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 238.6917\n```\n:::\n\n```{.r .cell-code}\nBIC(mod_forw)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 242.2531\n```\n:::\n:::\n\n\n\nMaintenant, nous allons permuter de façon aléatoire les salaires des 18 joueurs et refaire la même analyse inférentielle. Ainsi, le lien linéaire devrait disparaitre et nous donner de mauvais résultats.\n\n::: {.cell}\n\n```{.r .cell-code}\nSalary_permute <- sample(Salary)\n\nmod1_permute <- lm(Salary_permute~., Hitters_Without_NA_18)\nmod1_permute %>% summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = Salary_permute ~ ., data = Hitters_Without_NA_18)\n\nResiduals:\nALL 18 residuals are 0: no residual degrees of freedom!\n\nCoefficients: (3 not defined because of singularities)\n              Estimate Std. Error t value Pr(>|t|)\n(Intercept) -3.084e+03        NaN     NaN      NaN\nAtBat        4.202e+01        NaN     NaN      NaN\nHits        -7.353e+01        NaN     NaN      NaN\nHmRun       -1.133e+02        NaN     NaN      NaN\nRuns        -2.856e+01        NaN     NaN      NaN\nRBI         -3.221e+01        NaN     NaN      NaN\nWalks       -1.019e+01        NaN     NaN      NaN\nYears        7.144e+02        NaN     NaN      NaN\nCAtBat      -1.280e+01        NaN     NaN      NaN\nCHits        2.898e+01        NaN     NaN      NaN\nCHmRun      -4.692e+01        NaN     NaN      NaN\nCRuns        1.219e+01        NaN     NaN      NaN\nCRBI         2.387e+01        NaN     NaN      NaN\nCWalks      -1.128e+00        NaN     NaN      NaN\nLeagueN     -1.696e+02        NaN     NaN      NaN\nDivisionW   -4.636e+02        NaN     NaN      NaN\nPutOuts     -1.405e-02        NaN     NaN      NaN\nAssists     -3.897e+00        NaN     NaN      NaN\nErrors              NA         NA      NA       NA\nSalary              NA         NA      NA       NA\nNewLeagueN          NA         NA      NA       NA\n\nResidual standard error: NaN on 0 degrees of freedom\nMultiple R-squared:      1,\tAdjusted R-squared:    NaN \nF-statistic:   NaN on 17 and 0 DF,  p-value: NA\n```\n:::\n:::\n\n\nA nouveau on peut constater l'inéfficacité d'un modèle avec toutes les variables du fait d'avoir $p>n$.\n\nUtilisons maintenant la sélection automatique.\n\n::: {.cell}\n\n```{.r .cell-code}\nmod0_permute <- lm(Salary_permute~1, Hitters_Without_NA_18)\nmod_forw_permute <- step(mod0_permute, \n                         scope = formula(mod1_permute),\n                         trace = FALSE,\n                         direction = c(\"forward\"))\nmod_forw_permute %>% summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = Salary_permute ~ Walks, data = Hitters_Without_NA_18)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-372.42 -194.78  -25.54  204.02  526.92 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  611.293    133.714   4.572 0.000314 ***\nWalks         -5.458      3.107  -1.757 0.098022 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 284.9 on 16 degrees of freedom\nMultiple R-squared:  0.1617,\tAdjusted R-squared:  0.1094 \nF-statistic: 3.087 on 1 and 16 DF,  p-value: 0.09802\n```\n:::\n:::\n\nOn retrouve ici un modèle très différent concernant les variables sélectionnés avec de très mauvais résultats de $R^2$ et $R^2_{adjusted}$.\n\n\n\nPour finir, on va maintenant reprendre le jeu de données **Hitters** complet et permuter tous les salaires de façon aléatoire. Ensuite, on va ajuster le meilleur modèle de régression possible pour expliquer les salaires en fonction des autres variables.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSalary_permute <- sample(Hitters_Without_NA$Salary)\nHitters_Without_NA_And_Salary = Hitters_Without_NA[,-19]\n\nHitters_With_Salary_permute <- cbind(Hitters_Without_NA_And_Salary, Salary_permute)\n\nmod0_permute <- lm(Salary_permute~., Hitters_With_Salary_permute)\nmod1_permute <- lm(Salary_permute~1, Hitters_With_Salary_permute)\n\n\nmod_permute_back <- step(mod1_permute,\n                         scope = formula(mod1_permute),\n                         trace = FALSE,\n                         direction = c(\"backward\"))\nmod_permute_back %>% summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = Salary_permute ~ 1, data = Hitters_With_Salary_permute)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-468.4 -345.9 -110.9  214.1 1924.1 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   535.93      27.82   19.27   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 451.1 on 262 degrees of freedom\n```\n:::\n\n```{.r .cell-code}\nmod_permute_forw <- step(mod0_permute,\n                         scope = formula(mod1_permute),\n                         trace = FALSE,\n                         direction = c(\"forward\"))\nmod_permute_forw %>% summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = Salary_permute ~ AtBat + Hits + HmRun + Runs + RBI + \n    Walks + Years + CAtBat + CHits + CHmRun + CRuns + CRBI + \n    CWalks + League + Division + PutOuts + Assists + Errors + \n    NewLeague, data = Hitters_With_Salary_permute)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-734.84 -296.04  -93.62  156.00 1790.72 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)  \n(Intercept) 295.1920   127.2997   2.319   0.0212 *\nAtBat         0.7061     0.8890   0.794   0.4278  \nHits          0.9845     3.3340   0.295   0.7680  \nHmRun        11.0696     8.6964   1.273   0.2043  \nRuns         -2.8016     4.1799  -0.670   0.5033  \nRBI          -1.1012     3.6472  -0.302   0.7630  \nWalks         0.4385     2.5641   0.171   0.8644  \nYears       -18.3420    17.4058  -1.054   0.2930  \nCAtBat        0.4730     0.1896   2.494   0.0133 *\nCHits        -1.9294     0.9459  -2.040   0.0425 *\nCHmRun       -4.7194     2.2679  -2.081   0.0385 *\nCRuns         0.5672     1.0524   0.539   0.5904  \nCRBI          1.2618     0.9713   1.299   0.1951  \nCWalks       -0.0762     0.4601  -0.166   0.8686  \nLeagueN      36.0960   111.1491   0.325   0.7456  \nDivisionW   -64.7232    56.6070  -1.143   0.2540  \nPutOuts      -0.1738     0.1086  -1.601   0.1107  \nAssists      -0.1817     0.3102  -0.586   0.5586  \nErrors       -4.6046     6.1584  -0.748   0.4554  \nNewLeagueN   77.2633   110.7863   0.697   0.4862  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 442.5 on 243 degrees of freedom\nMultiple R-squared:  0.1074,\tAdjusted R-squared:  0.03766 \nF-statistic:  1.54 on 19 and 243 DF,  p-value: 0.07302\n```\n:::\n\n```{.r .cell-code}\nmod_permute_both <- step(mod0_permute,\n                         scope = formula(mod1_permute),\n                         trace = FALSE,\n                         direction = c(\"both\"))\nmod_permute_both %>% summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = Salary_permute ~ AtBat + HmRun + CAtBat + CHits + \n    CHmRun + NewLeague, data = Hitters_With_Salary_permute)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-662.0 -292.2 -102.3  184.1 1816.6 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)   \n(Intercept) 188.2631    91.6800   2.053  0.04104 * \nAtBat         0.3942     0.2363   1.668  0.09654 . \nHmRun         7.6350     4.7013   1.624  0.10560   \nCAtBat        0.3538     0.1286   2.751  0.00636 **\nCHits        -1.0641     0.4389  -2.424  0.01603 * \nCHmRun       -1.7479     0.7005  -2.495  0.01322 * \nNewLeagueN  105.7343    55.4987   1.905  0.05788 . \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 438.2 on 256 degrees of freedom\nMultiple R-squared:  0.07803,\tAdjusted R-squared:  0.05642 \nF-statistic: 3.611 on 6 and 256 DF,  p-value: 0.001867\n```\n:::\n:::\n\n\nOn constate de très mauvais résultats de $R^2$ et $R^2_{adjusted}$ et au final la seule variable qui semble vraiment significative est l'*intercept* ce qui montre bien qu'avec la permutation aléatoire de la variable *Salary*, le lien linéaire qui existait à disparu.\n\n# Conclusion\n\n\n# Session info\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessioninfo::session_info(pkgs = \"attached\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.2.1 (2022-06-23 ucrt)\n os       Windows 10 x64 (build 22631)\n system   x86_64, mingw32\n ui       RTerm\n language (EN)\n collate  French_France.utf8\n ctype    French_France.utf8\n tz       Europe/Paris\n date     2025-02-17\n pandoc   3.2 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package    * version date (UTC) lib source\n dplyr      * 1.1.4   2023-11-17 [1] CRAN (R 4.2.3)\n forcats    * 1.0.0   2023-01-29 [1] CRAN (R 4.2.2)\n ggplot2    * 3.5.1   2024-04-23 [1] CRAN (R 4.2.3)\n ISLR       * 1.4     2021-09-15 [1] CRAN (R 4.2.3)\n kableExtra * 1.4.0   2024-01-24 [1] CRAN (R 4.2.3)\n lubridate  * 1.9.3   2023-09-27 [1] CRAN (R 4.2.3)\n purrr      * 1.0.2   2023-08-10 [1] CRAN (R 4.2.3)\n readr      * 2.1.5   2024-01-10 [1] CRAN (R 4.2.3)\n stringr    * 1.5.1   2023-11-14 [1] CRAN (R 4.2.3)\n tibble     * 3.2.1   2023-03-20 [1] CRAN (R 4.2.3)\n tidyr      * 1.3.1   2024-01-24 [1] CRAN (R 4.2.3)\n tidyverse  * 2.0.0   2023-02-22 [1] CRAN (R 4.2.2)\n\n [1] C:/Users/cleme/AppData/Local/R/win-library/4.2\n [2] C:/Program Files/R/R-4.2.1/library\n\n──────────────────────────────────────────────────────────────────────────────\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/kePrint-0.0.1/kePrint.js\"></script>\r\n<link href=\"../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}