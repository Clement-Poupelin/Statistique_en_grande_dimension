{
  "hash": "7b9ed71c0321437f51ef1a69f427a5de",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Exercice 02\"\nauthor: \"Clément Poupelin\"\ndate: \"2025-02-17\"\ndate-modified: \"2025-02-21\"\nformat: \n  html:\n    embed-resources: false\n    toc: true\n    code-fold: true\n    code-summary: \"Show the code\"\n    code-tools: true\n    toc-location: right\n    page-layout: article\n    code-overflow: wrap\ntoc: true\nnumber-sections: false\neditor: visual\ncategories: [\"regression linéaire\", \"selection de variable\"]\nimage: \"/img/baseball.png\"\ndescription: \"Ici, on continu sur des données de baseball en testant cette fois ci le lien linéaire existant et en mettant en avant le fléau de la dimensionalité\"\n---\n\n\n\n# Intervenant.e.s\n\n### Rédaction\n\n-   **Clément Poupelin**, [clementjc.poupelin\\@gmail.com](mailto:clementjc.poupelin@gmail.com){.email}\\\n\n### Relecture\n\n-   \n\n# Setup\n\n::: panel-tabset\n## Packages\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Données\nlibrary(ISLR)         # Hitters data \nlibrary(dplyr)        # manipulation des données\n```\n:::\n\n\n\n## Fonctions\n\n## Seed\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(140400)\n```\n:::\n\n\n:::\n\n# Données\n\nOn étudie toujours le jeu de données [**Hitters**](https://rdrr.io/cran/ISLR/man/Hitters.html) disponible dans la libraire *`{ISLR}`* de *`R`*. Il s'agit d'un jeu de données de la *Major League Baseball* provenant des saisons de 1986 et 1987.\n\nLe jeu de données possède 322 lignes/individus pour les différents joueurs et 20 variables.\\\nParmi les variables, on trouve les informations suivantes :\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-hover table-condensed\" style=\"margin-left: auto; margin-right: auto;\">\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">AtBat</span> </td>\n   <td style=\"text-align:left;\"> Number of times at bat in 1986 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">Hits</span> </td>\n   <td style=\"text-align:left;\"> Number of hits in 1986 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">HmRun</span> </td>\n   <td style=\"text-align:left;\"> Number of home runs in 1986 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">Runs</span> </td>\n   <td style=\"text-align:left;\"> Number of runs in 1986 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">RBI</span> </td>\n   <td style=\"text-align:left;\"> Number of runs batted in in 1986 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">Walks</span> </td>\n   <td style=\"text-align:left;\"> Number of walks in 1986 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">Years</span> </td>\n   <td style=\"text-align:left;\"> Number of years in the major leagues </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">CAtBat</span> </td>\n   <td style=\"text-align:left;\"> Number of times at bat during his career </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">CHits</span> </td>\n   <td style=\"text-align:left;\"> Number of hits during his career </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">CHmRun</span> </td>\n   <td style=\"text-align:left;\"> Number of home runs during his career </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">CRuns</span> </td>\n   <td style=\"text-align:left;\"> Number of runs during his career </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">CRBI</span> </td>\n   <td style=\"text-align:left;\"> Number of runs batted in during his career </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">CWalks</span> </td>\n   <td style=\"text-align:left;\"> Number of walks during his career </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">League</span> </td>\n   <td style=\"text-align:left;\"> A factor with levels A and N indicating player's league at the end of 1986 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">Division</span> </td>\n   <td style=\"text-align:left;\"> A factor with levels E and W indicating player's division at the end of 1986 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">PutOuts</span> </td>\n   <td style=\"text-align:left;\"> Number of put outs in 1986 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">Assists</span> </td>\n   <td style=\"text-align:left;\"> Number of assists in 1986 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">Errors</span> </td>\n   <td style=\"text-align:left;\"> Number of errors in 1986 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">Salary</span> </td>\n   <td style=\"text-align:left;\"> 1987 annual salary on opening day in thousands of dollars </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> <span style=\" font-weight: bold;    \">NewLeague</span> </td>\n   <td style=\"text-align:left;\"> A factor with levels A and N indicating player's league at the beginning of 1987 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\nComme pour l'[Exercice 1](../posts/Exercice_01.qmd), on va commencer par se débarasser des variables manquantes.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHitters_Without_NA <- Hitters %>% na.omit()\n```\n:::\n\n\n\nPuis cette fois ci nous allons dans un premier temps nous concentrer sur un sous jeu de données composé des 18 premières lignes sans valeurs manquantes.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHitters_Without_NA_18 <- Hitters_Without_NA[1:18, ]\nHitters_Without_NA_18 %>% dim()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 18 20\n```\n\n\n:::\n:::\n\n\n\n::: callout-warning\nAttention, on peut remarquer ici que le nombre de variable est supérieur au nombre d'individus. On est donc dans un cas classique de grandes dimension avec $p>n$.\n:::\n\nMaintenant, il conviendrait dans ce genre de situation d'effectuer de premières analyses descritptives. Mais celle ci ayant déjà été faite sur le jeu de données complet pendant l'[Exercice 1](../posts/Exercice_01.qmd), on se permettra de ne pas les refaires.\n\n# Analyse inférentielle\n\n## Modèle brut\n\nOn désire modéliser le salaire *Salary* en fonction des variables disponibles.\n\nOn va donc ajuster un modèle de régression linéaire en utilisant toutes les variables à disposition et analyser la qualité de cet ajustement.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod1 <- lm(formula = Salary ~ .,\n           Hitters_Without_NA_18) \nmod1 %>% summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = Salary ~ ., data = Hitters_Without_NA_18)\n\nResiduals:\nALL 18 residuals are 0: no residual degrees of freedom!\n\nCoefficients: (2 not defined because of singularities)\n             Estimate Std. Error t value Pr(>|t|)\n(Intercept) -223.7909        NaN     NaN      NaN\nAtBat         -3.2428        NaN     NaN      NaN\nHits          13.1990        NaN     NaN      NaN\nHmRun        -60.8834        NaN     NaN      NaN\nRuns           0.6875        NaN     NaN      NaN\nRBI           10.3993        NaN     NaN      NaN\nWalks          7.0114        NaN     NaN      NaN\nYears         -2.3702        NaN     NaN      NaN\nCAtBat         0.2643        NaN     NaN      NaN\nCHits         -1.7919        NaN     NaN      NaN\nCHmRun         5.3897        NaN     NaN      NaN\nCRuns          4.0162        NaN     NaN      NaN\nCRBI          -4.0134        NaN     NaN      NaN\nCWalks         1.5822        NaN     NaN      NaN\nLeagueN      233.6380        NaN     NaN      NaN\nDivisionW    299.1771        NaN     NaN      NaN\nPutOuts       -0.1250        NaN     NaN      NaN\nAssists       -0.8539        NaN     NaN      NaN\nErrors             NA         NA      NA       NA\nNewLeagueN         NA         NA      NA       NA\n\nResidual standard error: NaN on 0 degrees of freedom\nMultiple R-squared:      1,\tAdjusted R-squared:    NaN \nF-statistic:   NaN on 17 and 0 DF,  p-value: NA\n```\n\n\n:::\n:::\n\n\n\n:::: success-header\n::: success-icon\n:::\n\nRésultats\n::::\n\n::: success\nOn peut clairement constater que ce modèle brut ne fonctionne pas avec pourtant un $R^2 = 1$. On retrouve donc le problème typique de l'analyse en grande dimension lorsque $p>n$ (fléau de la dimensionalité).\n:::\n\nOn peut aussi s'amuser à regarder les critères *AIC* et *BIC* de ce modèles qui théoriquement se retrouve à tendre vers l'infini.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncat( \"AIC = \", AIC(mod1), \"et BIC = \", BIC(mod1))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAIC =  -Inf et BIC =  -Inf\n```\n\n\n:::\n:::\n\n\n\n### Prediction\n\nOn va maintenant tenter de prédire la variable *Salary* pour les autres joueurs.\\\nDéjà on peut regarder sur les 18 joueurs si la prédiction via le modèle nous donne des bonnes valeur.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSalary_hat <- predict(mod1, Hitters_Without_NA_18)\nSalary <- Hitters_Without_NA_18$Salary\n```\n:::\n\n\n\n-   $\\widehat{Salary^{(1:18)}} - Salary^{(1:18)} =$ 0\n\nCe que l'on constate c'est qu'effectivement nous sommes avec un résultat qui pourrait nous faire penser que le modèle est bien ajusté avec une prédiction quasiment égale à la variable à prédire.\n\nPourtant si nous regardons la prédiction obtenue par le modèle pour les autres joueurs et que nous effectuons la même soustraction pour comparer la qualité de prediction, nous voyons bien l'inéfficacité du modèle.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHitters_Without_NA_No18 <- Hitters_Without_NA[19:nrow(Hitters_Without_NA),]\nSalary_hat_No18 <- predict(mod1, Hitters_Without_NA_No18)\nSalary_No18 <- Hitters_Without_NA_No18$Salary\n```\n:::\n\n\n\n-   $\\widehat{Salary^{(\\neg 1:18)}} - Salary^{(\\neg 1:18)} =$ -70.88\n\nEn effet on voit bien au dessus que les valeurs ne sont en moyennes pas proche de 0.\n\n## Modèles parcimonieux\n\nOn va maintenant mettre un oeuvre une méthode de sélection automatique classique pour réduire le nombre de variable explicative et tenter d'éviter les problèmes de grande dimension.\n\nPour cela nous allons donc partir du plus petit modèle (celui avec seulement l'*intercept*) puis faire grandir le nombre de variable. Il va donc s'agir d'une méthode de sélection automatique *forward*.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod0 <- lm(Salary~1, Hitters_Without_NA_18)\nmod_forw <- step(mod0,\n                 scope = formula(mod1),\n                 trace = FALSE,\n                 direction = c(\"forward\"))\nmod_forw %>% summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = Salary ~ CWalks + League, data = Hitters_Without_NA_18)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-215.51  -82.67  -48.10   26.13  302.49 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  259.3539    77.1270   3.363  0.00427 ** \nCWalks         0.9699     0.1606   6.039 2.27e-05 ***\nLeagueN     -137.2850    79.1236  -1.735  0.10322    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 160.8 on 15 degrees of freedom\nMultiple R-squared:  0.7495,\tAdjusted R-squared:  0.7161 \nF-statistic: 22.44 on 2 and 15 DF,  p-value: 3.095e-05\n```\n\n\n:::\n:::\n\n\n\n:::: success-header\n::: success-icon\n:::\n\nRésultats\n::::\n\n::: success\nNous obtenons maintenant un modèle avec 2 variable dont une significative. Puis nous pouvons constater des valeurs assez élevés pour le $R^2$ et $R^2_{adjusted}$.\n\nEt on a *AIC* = 238.692 et *BIC* = 242.253.\n\nDonc sans aller tester si c'est un bon modèle prédictif, on constate déjà qu'il va s'agir d'un modèle descriptif fonctionnel avec $n<p$\n:::\n\n# Permutations\n\nMaintenant, nous allons permuter de façon aléatoire les salaires des 18 joueurs et refaire la même analyse inférentielle. Ainsi, le lien linéaire devrait disparaitre et nous donner de mauvais résultats.\n\n::: callout-note\npour des raisons de repouctibilité, une graine ou seed a été défini dans le setup afin que la génération aléatoire reste identique.\n:::\n\nFaisons à nouveau le modèle brute sur nos 18 joueurs.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHitters_Without_NA_18$Salary_permute <- sample(Salary)\n\nmod1_permute <- lm(Salary_permute~., subset(Hitters_Without_NA_18, select = -Salary))\nmod1_permute %>% summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = Salary_permute ~ ., data = subset(Hitters_Without_NA_18, \n    select = -Salary))\n\nResiduals:\nALL 18 residuals are 0: no residual degrees of freedom!\n\nCoefficients: (2 not defined because of singularities)\n              Estimate Std. Error t value Pr(>|t|)\n(Intercept) -3424.4890        NaN     NaN      NaN\nAtBat          38.2468        NaN     NaN      NaN\nHits          -95.2285        NaN     NaN      NaN\nHmRun        -416.5695        NaN     NaN      NaN\nRuns           40.5868        NaN     NaN      NaN\nRBI            50.2860        NaN     NaN      NaN\nWalks         -23.5877        NaN     NaN      NaN\nYears         691.4211        NaN     NaN      NaN\nCAtBat        -13.2054        NaN     NaN      NaN\nCHits          53.0461        NaN     NaN      NaN\nCHmRun         68.4706        NaN     NaN      NaN\nCRuns         -16.2821        NaN     NaN      NaN\nCRBI          -24.4509        NaN     NaN      NaN\nCWalks          7.5470        NaN     NaN      NaN\nLeagueN       304.4377        NaN     NaN      NaN\nDivisionW    -445.0630        NaN     NaN      NaN\nPutOuts         0.3775        NaN     NaN      NaN\nAssists        -4.0206        NaN     NaN      NaN\nErrors              NA         NA      NA       NA\nNewLeagueN          NA         NA      NA       NA\n\nResidual standard error: NaN on 0 degrees of freedom\nMultiple R-squared:      1,\tAdjusted R-squared:    NaN \nF-statistic:   NaN on 17 and 0 DF,  p-value: NA\n```\n\n\n:::\n:::\n\n\n\n:::: success-header\n::: success-icon\n:::\n\nRésultats\n::::\n\n::: success\nA nouveau on peut constater l'inéfficacité d'un modèle avec toutes les variables du fait d'avoir $p>n$.\n:::\n\nUtilisons maintenant la sélection automatique en testant à nouveau l'approche *forward*.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod0_permute <- lm(Salary_permute~1, subset(Hitters_Without_NA_18, select = -Salary))\nmod_forw_permute <- step(mod0_permute, \n                         scope = formula(mod1_permute),\n                         trace = FALSE,\n                         direction = c(\"forward\"))\nmod_forw_permute %>% summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = Salary_permute ~ Walks + HmRun, data = subset(Hitters_Without_NA_18, \n    select = -Salary))\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-437.54 -163.95    8.98  145.42  510.31 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  682.171    121.221   5.628 4.81e-05 ***\nWalks        -13.212      5.056  -2.613   0.0196 *  \nHmRun         22.524     15.187   1.483   0.1587    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 257.4 on 15 degrees of freedom\nMultiple R-squared:  0.3583,\tAdjusted R-squared:  0.2727 \nF-statistic: 4.187 on 2 and 15 DF,  p-value: 0.0359\n```\n\n\n:::\n:::\n\n\n\n:::: success-header\n::: success-icon\n:::\n\nRésultats\n::::\n\n::: success\nOn constate que plusieurs variables son significatives. Pourtant, on trouve ici un modèle avec de très mauvais $R^2$ et $R^2_{adjusted}$. Donc un modèle de mauvaise qualité avec en plus une variance assez grande.\n:::\n\nPour finir, on va maintenant reprendre le jeu de données **Hitters** complet et permuter tous les salaires de façon aléatoire. Ensuite, on va ajuster le meilleur modèle de régression possible pour expliquer les salaires en fonction des autres variables.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHitters_Without_NA$Salary_permute <- sample(Hitters_Without_NA$Salary)\n\nmod0_permute <- lm(Salary_permute~., subset(Hitters_Without_NA, select = -Salary))\nmod1_permute <- lm(Salary_permute~1, subset(Hitters_Without_NA, select = -Salary))\n\n\nmod_permute_back <- step(mod1_permute,\n                         scope = formula(mod1_permute),\n                         trace = FALSE,\n                         direction = c(\"backward\"))\n\n\n\nmod_permute_forw <- step(mod0_permute,\n                         scope = formula(mod1_permute),\n                         trace = FALSE,\n                         direction = c(\"forward\"))\n\n\nmod_permute_both <- step(mod0_permute,\n                         scope = formula(mod1_permute),\n                         trace = FALSE,\n                         direction = c(\"both\"))\n```\n:::\n\n\n\n::: panel-tabset\n## *Backward*\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_permute_back %>% summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = Salary_permute ~ 1, data = subset(Hitters_Without_NA, \n    select = -Salary))\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-468.4 -345.9 -110.9  214.1 1924.1 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   535.93      27.82   19.27   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 451.1 on 262 degrees of freedom\n```\n\n\n:::\n:::\n\n\n\n## *Forward*\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_permute_forw %>% summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = Salary_permute ~ AtBat + Hits + HmRun + Runs + RBI + \n    Walks + Years + CAtBat + CHits + CHmRun + CRuns + CRBI + \n    CWalks + League + Division + PutOuts + Assists + Errors + \n    NewLeague, data = subset(Hitters_Without_NA, select = -Salary))\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-717.32 -311.48  -80.55  210.07 1729.22 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)  \n(Intercept)  213.83924  128.25879   1.667   0.0968 .\nAtBat          0.79917    0.89573   0.892   0.3732  \nHits          -0.39046    3.35916  -0.116   0.9076  \nHmRun        -15.65359    8.76187  -1.787   0.0753 .\nRuns           1.54702    4.21144   0.367   0.7137  \nRBI            3.30928    3.67472   0.901   0.3687  \nWalks         -1.50102    2.58345  -0.581   0.5618  \nYears         34.59958   17.53688   1.973   0.0496 *\nCAtBat        -0.19099    0.19107  -1.000   0.3185  \nCHits          0.76040    0.95306   0.798   0.4257  \nCHmRun         2.69347    2.28496   1.179   0.2396  \nCRuns         -0.99130    1.06030  -0.935   0.3508  \nCRBI          -1.04738    0.97858  -1.070   0.2855  \nCWalks         0.99760    0.46354   2.152   0.0324 *\nLeagueN     -188.25478  111.98651  -1.681   0.0940 .\nDivisionW     59.97471   57.03348   1.052   0.2940  \nPutOuts       -0.05287    0.10941  -0.483   0.6294  \nAssists       -0.33618    0.31253  -1.076   0.2831  \nErrors        -0.51571    6.20483  -0.083   0.9338  \nNewLeagueN   240.36156  111.62089   2.153   0.0323 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 445.9 on 243 degrees of freedom\nMultiple R-squared:  0.09395,\tAdjusted R-squared:  0.0231 \nF-statistic: 1.326 on 19 and 243 DF,  p-value: 0.1672\n```\n\n\n:::\n:::\n\n\n\n## *Both*\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_permute_both %>% summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = Salary_permute ~ AtBat + HmRun + Years + CAtBat + \n    CWalks + League + Assists + NewLeague, data = subset(Hitters_Without_NA, \n    select = -Salary))\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-681.1 -325.6 -101.4  220.0 1725.7 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  238.07953  116.47262   2.044  0.04198 *  \nAtBat          0.90098    0.28464   3.165  0.00174 ** \nHmRun         -7.42307    4.29005  -1.730  0.08479 .  \nYears         35.62737   15.88548   2.243  0.02578 *  \nCAtBat        -0.14624    0.04353  -3.360  0.00090 ***\nCWalks         0.64126    0.25014   2.564  0.01094 *  \nLeagueN     -195.98139  109.10111  -1.796  0.07363 .  \nAssists       -0.33430    0.22402  -1.492  0.13686    \nNewLeagueN   245.27466  108.53924   2.260  0.02468 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 439.3 on 254 degrees of freedom\nMultiple R-squared:  0.0807,\tAdjusted R-squared:  0.05174 \nF-statistic: 2.787 on 8 and 254 DF,  p-value: 0.005669\n```\n\n\n:::\n:::\n\n\n:::\n\n:::: success-header\n::: success-icon\n:::\n\nRésultats\n::::\n\n::: success\nOn constate qu'aucune méthode de sélection de variable ne permet d'avoir ne serait-ce qu'un modèle correct ce qui montre bien qu'avec la permutation aléatoire de la variable *Salary*, le lien linéaire qui existait à disparu.\n:::\n\n# Conclusion\n\nDans un premier temps, on a pu avoir un aperçu de ce qu'il se passe lorsque l'on se retrouve face au fléa de la dimensionalité avec un sous jeu de données où le nombre de variables était supérieur au nombre d'individus.\n\nPuis, on a aussi pu voir l'importance du lien linéaire dans la construction d'un modèle de regression. Cela renforce par l'exemple la véracité du modèle de régression linéaire (au cas où l'on en doutais encore).\n\n# Session info\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessioninfo::session_info(pkgs = \"attached\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.4.2 (2024-10-31)\n os       Ubuntu 24.04.1 LTS\n system   x86_64, linux-gnu\n ui       X11\n language (EN)\n collate  fr_FR.UTF-8\n ctype    fr_FR.UTF-8\n tz       Europe/Paris\n date     2025-02-21\n pandoc   3.2 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/tools/x86_64/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package    * version date (UTC) lib source\n dplyr      * 1.1.4   2023-11-17 [1] CRAN (R 4.4.2)\n forcats    * 1.0.0   2023-01-29 [1] CRAN (R 4.4.2)\n ggplot2    * 3.5.1   2024-04-23 [1] CRAN (R 4.4.2)\n ISLR       * 1.4     2021-09-15 [1] CRAN (R 4.4.2)\n kableExtra * 1.4.0   2024-01-24 [1] CRAN (R 4.4.2)\n lubridate  * 1.9.4   2024-12-08 [1] CRAN (R 4.4.2)\n purrr      * 1.0.2   2023-08-10 [2] CRAN (R 4.3.3)\n readr      * 2.1.5   2024-01-10 [1] CRAN (R 4.4.2)\n stringr    * 1.5.1   2023-11-14 [2] CRAN (R 4.3.3)\n tibble     * 3.2.1   2023-03-20 [2] CRAN (R 4.3.3)\n tidyr      * 1.3.1   2024-01-24 [1] CRAN (R 4.4.2)\n tidyverse  * 2.0.0   2023-02-22 [1] CRAN (R 4.4.2)\n\n [1] /home/clement/R/x86_64-pc-linux-gnu-library/4.4\n [2] /usr/local/lib/R/site-library\n [3] /usr/lib/R/site-library\n [4] /usr/lib/R/library\n\n──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}