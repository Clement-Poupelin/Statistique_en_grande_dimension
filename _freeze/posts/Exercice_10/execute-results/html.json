{
  "hash": "12b93187b6901a87aca2a4f70eb7859e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Exercice 10\"\nauthor: \"Clément Poupelin\"\ndate: \"2025-02-25\"\nformat: \n  html:\n    embed-resources: false\n    toc: true\n    code-fold: true\n    code-summary: \"Show the code\"\n    code-tools: true\n    toc-location: right\n    page-layout: article\n    code-overflow: wrap\ntoc: true\nnumber-sections: false\neditor: visual\ncategories: [\"Régression logistique\", \"Régression logistique Lasso\", \"Sélection automatique\", \"Validation croisée\"]\nimage: \"/img/caravane.png\"\ndescription: \"Description\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n####################################\n### Ex 10 : Caravan\nlibrary(ISLR)\ndata(\"Caravan\")\ndim(Caravan)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5822   86\n```\n\n\n:::\n\n```{.r .cell-code}\ndim(na.omit(Caravan))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5822   86\n```\n\n\n:::\n\n```{.r .cell-code}\nindexyes=which(Caravan$Purchase==\"Yes\")\nindexno=which(Caravan$Purchase==\"No\")\ntrain=c(sample(indexyes,length(indexyes)/2),sample(indexno,length(indexno)/2))\n\ny=Caravan$Purchase[train]\nXtrain=as.matrix(Caravan[train,-86])\nytest=Caravan$Purchase[-train]\nXtest=Caravan[-train,-86]\n\n#Forward\nmod=glm(Purchase~.,family=\"binomial\",data=Caravan,subset=train)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: glm.fit: des probabilités ont été ajustées numériquement à 0 ou 1\n```\n\n\n:::\n\n```{.r .cell-code}\nmod0=glm(Purchase~1,family=\"binomial\",data=Caravan,subset=train)\ntmp=step(mod0,scope=formula(mod),direction=\"both\",k=log(n/2),trace=0)#par BIC\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'n' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\ntmp$formula\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'tmp' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nmodforw=eval(tmp$call)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'tmp' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\npred=predict(modforw,Xtest,type=\"response\")\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'modforw' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ROCR)\npr = prediction(pred, ytest) \n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'pred' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nroc = performance(pr, measure = \"tpr\", x.measure = \"fpr\") \n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'pr' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(roc)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in h(simpleError(msg, call)): erreur d'ï¿½valuation de l'argument 'x' lors de la sï¿½lection d'une mï¿½thode pour la fonction 'plot' : objet 'roc' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\naucfwd=performance(pr,measure=\"auc\")@y.values\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'pr' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\n#Lasso\ncvglmnet=cv.glmnet(Xtrain,y,family=\"binomial\",type.measure=\"auc\",nfolds=10)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in cv.glmnet(Xtrain, y, family = \"binomial\", type.measure = \"auc\", : impossible de trouver la fonction \"cv.glmnet\"\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(cvglmnet)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in h(simpleError(msg, call)): erreur d'ï¿½valuation de l'argument 'x' lors de la sï¿½lection d'une mï¿½thode pour la fonction 'plot' : objet 'cvglmnet' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\npredlasso=predict(cvglmnet,as.matrix(Xtest),s=cvglmnet$lambda.min,type=\"response\")\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'cvglmnet' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nprlasso = prediction(predlasso, ytest) \n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'predlasso' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nroclasso = performance(prlasso, measure = \"tpr\", x.measure = \"fpr\") \n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'prlasso' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nauclasso=performance(prlasso,measure=\"auc\")@y.values\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'prlasso' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\n#Comparaison : Lasso semble un peu meilleur, mais sélectionne plus de variables\n#(il faudrait recommencer avec plusieurs découpages train/test)\nplot(roc)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in h(simpleError(msg, call)): erreur d'ï¿½valuation de l'argument 'x' lors de la sï¿½lection d'une mï¿½thode pour la fonction 'plot' : objet 'roc' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(roclasso,add=T,col=2)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in h(simpleError(msg, call)): erreur d'ï¿½valuation de l'argument 'x' lors de la sï¿½lection d'une mï¿½thode pour la fonction 'plot' : objet 'roclasso' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\naucfwd\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'aucfwd' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nauclasso\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'auclasso' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\ncoef(modforw)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'modforw' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\ncoef(cvglmnet,s=cvglmnet$lambda.min)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'cvglmnet' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\n#D'autres méthodes possibles :\n\n#Gauss Lasso\nw=coef(cvglmnet,s=cvglmnet$lambda.min)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'cvglmnet' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nindex=which(w[-1]!=0)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'w' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nfit=glm(Purchase~.,data=Caravan[train,c(index,86)],family=\"binomial\")\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in eval(mf, parent.frame()): objet 'index' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\npredgauss=predict(fit,Xtest,type=\"response\")\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'fit' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\n#Adaptive Lasso\ncvglm=cv.glmnet(Xtrain,y,family=\"binomial\",type.measure=\"auc\",penalty.factor=1/abs(w[-1]))\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in cv.glmnet(Xtrain, y, family = \"binomial\", type.measure = \"auc\", : impossible de trouver la fonction \"cv.glmnet\"\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(cvglm)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in h(simpleError(msg, call)): erreur d'ï¿½valuation de l'argument 'x' lors de la sï¿½lection d'une mï¿½thode pour la fonction 'plot' : objet 'cvglm' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\npredalasso=predict(cvglm,as.matrix(Xtest),s=cvglm$lambda.min,type=\"response\")\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'cvglm' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\n#+Gauss pour finir\nwal=coef(cvglm,s=cvglm$lambda.min)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'cvglm' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nindex=which(wal[-1]!=0)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'wal' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nfit=glm(Purchase~.,data=Caravan[train,c(index,86)],family=\"binomial\")\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in eval(mf, parent.frame()): objet 'index' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\npredalgauss=predict(fit,Xtest,type=\"response\")\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'fit' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\n#Logistic Ridge\ncvglmnet=cv.glmnet(Xtrain,y,family=\"binomial\",type.measure=\"auc\",alpha=0)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in cv.glmnet(Xtrain, y, family = \"binomial\", type.measure = \"auc\", : impossible de trouver la fonction \"cv.glmnet\"\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(cvglmnet)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in h(simpleError(msg, call)): erreur d'ï¿½valuation de l'argument 'x' lors de la sï¿½lection d'une mï¿½thode pour la fonction 'plot' : objet 'cvglmnet' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\npredridge=predict(cvglmnet,as.matrix(Xtest),s=cvglmnet$lambda.min,type=\"response\")\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'cvglmnet' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\n#Logistic Elastic Net (pour alpha=0.5)\ncvglmnet=cv.glmnet(Xtrain,y,family=\"binomial\",type.measure=\"auc\",alpha=1/2)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in cv.glmnet(Xtrain, y, family = \"binomial\", type.measure = \"auc\", : impossible de trouver la fonction \"cv.glmnet\"\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(cvglmnet)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in h(simpleError(msg, call)): erreur d'ï¿½valuation de l'argument 'x' lors de la sï¿½lection d'une mï¿½thode pour la fonction 'plot' : objet 'cvglmnet' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\npreden=predict(cvglmnet,as.matrix(Xtest),s=cvglmnet$lambda.min,type=\"response\")\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'cvglmnet' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\n#Comparaison finale : les méthodes supplémentaires n'apportent rien d'intéressant \n#(il faudrait recommencer avec plusieurs découpages train/test)\nlibrary(ROCR)\npr = prediction(pred, ytest) \n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'pred' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nroc = performance(pr, measure = \"tpr\", x.measure = \"fpr\") \n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'pr' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nprlasso = prediction(predlasso, ytest) \n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'predlasso' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nroclasso = performance(prlasso, measure = \"tpr\", x.measure = \"fpr\") \n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'prlasso' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nprgauss = prediction(predgauss, ytest) \n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'predgauss' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nrocgauss = performance(prgauss, measure = \"tpr\", x.measure = \"fpr\")\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'prgauss' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\npralasso = prediction(predalasso, ytest) \n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'predalasso' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nrocalasso = performance(pralasso, measure = \"tpr\", x.measure = \"fpr\")\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'pralasso' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\npralgauss = prediction(predalgauss, ytest) \n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'predalgauss' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nrocalgauss = performance(pralgauss, measure = \"tpr\", x.measure = \"fpr\")\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'pralgauss' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nprridge = prediction(predridge, ytest) \n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'predridge' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nrocridge = performance(prridge, measure = \"tpr\", x.measure = \"fpr\") \n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'prridge' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\npren = prediction(preden, ytest) \n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'preden' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nrocen = performance(pren, measure = \"tpr\", x.measure = \"fpr\") \n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'pren' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(roc)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in h(simpleError(msg, call)): erreur d'ï¿½valuation de l'argument 'x' lors de la sï¿½lection d'une mï¿½thode pour la fonction 'plot' : objet 'roc' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(roclasso,add=T,col=2)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in h(simpleError(msg, call)): erreur d'ï¿½valuation de l'argument 'x' lors de la sï¿½lection d'une mï¿½thode pour la fonction 'plot' : objet 'roclasso' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(rocgauss,add=T,col=3)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in h(simpleError(msg, call)): erreur d'ï¿½valuation de l'argument 'x' lors de la sï¿½lection d'une mï¿½thode pour la fonction 'plot' : objet 'rocgauss' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(rocalasso,add=T,col=4)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in h(simpleError(msg, call)): erreur d'ï¿½valuation de l'argument 'x' lors de la sï¿½lection d'une mï¿½thode pour la fonction 'plot' : objet 'rocalasso' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(rocalgauss,add=T,col=5)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in h(simpleError(msg, call)): erreur d'ï¿½valuation de l'argument 'x' lors de la sï¿½lection d'une mï¿½thode pour la fonction 'plot' : objet 'rocalgauss' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(rocridge,add=T,col=6)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in h(simpleError(msg, call)): erreur d'ï¿½valuation de l'argument 'x' lors de la sï¿½lection d'une mï¿½thode pour la fonction 'plot' : objet 'rocridge' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(rocen,add=T,col=7)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in h(simpleError(msg, call)): erreur d'ï¿½valuation de l'argument 'x' lors de la sï¿½lection d'une mï¿½thode pour la fonction 'plot' : objet 'rocen' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nperformance(pr,measure=\"auc\")@y.values\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'pr' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nperformance(prlasso,measure=\"auc\")@y.values\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'prlasso' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nperformance(prgauss,measure=\"auc\")@y.values\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'prgauss' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nperformance(pralasso,measure=\"auc\")@y.values\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'pralasso' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nperformance(pralgauss,measure=\"auc\")@y.values\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'pralgauss' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nperformance(prridge,measure=\"auc\")@y.values\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'prridge' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nperformance(pren,measure=\"auc\")@y.values\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'pren' introuvable\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}